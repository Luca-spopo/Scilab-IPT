Input data for migrate.cpp

TODO:
-getTextSize and threshold (maybe more at time of reading) return 2 variables. Support returning multiple variables
-Generate builder_gateway_cpp.sce for us so we don't need to.
-For functions where il2mat or mat2il are not used at all, and no overloading is done, do not generate .sci files and do not
rename bindings to opencv_name in builder_gateway_cpp.sce
-Do not generate "select case" if function not overloaded
-montage may not be implemented correctly
-More helpful error messages than error(42)


USAGE
e.g.

:a n 0 b 0 0 1 0

This means we make a function "a" that calls "b" when it has 4 arguments (0 0 1 0).
The third argument will first be transformed with mat2il before being passed. (Since it is represented by a 1)
The first, second and fourth arguments will be passed without any change. (Since they are represented by 0s)

We see there is a 0 before b. This means that the return value of b will be returned without modifications.
Otherwise, we would have run il2mat first. (This is done when b returns an image list)

The "n" tells the program that it's not a call to octave. If it was a "y", then it would be called in the format
of callOctave("b", ...) instead of b(...)

:a n 0 b 0 0 1 0 will generate:

function res = a(varargin)
	select length(varargin)
		case 4 then
			res = b(varargin(1), varargin(2), mat2il(varargin(3)), varargin(4))
		else
			error(39)
	end
endfunction

FUNCTION OVERLOADING:

e.g.

:x n 0 P 0 0 1 0
   y 1 Q 1 0

This creates a function "x" that calls "P" when it has 4 arguments (0 0 1 0) and "Q" if it has 2 arguments (1 0)
If P is called, then only the third argument is transformed using mat2il. The returned value is passed back as it is.
If Q is called, then only the first argument is transformed using mat2il first. The returned value is transformed using il2mat before being returned by x. (Since there is a '1' before Q)
This result in:

function res = x(varargin)
	select length(varargin)
		case 4 then
			res = P(varargin(1), varargin(2), mat2il(varargin(3)), varargin(4))
		case 2 then
			res = il2mat(callOctave("Q", mat2il(varargin(1)), varargin(2)))
		else
			error(39)
	end
endfunction


Functions which don't have to be generated:
clipline
convexhull
ellipse2poly
getStructuringElement
getTextSize
boundingRect
getgaussiangernel
getrotationalmatrix2D

These functions do not need mat2il or il2mat, and are not overloaded as of now.

Actual data starts after the double slash

                     (1=return w/ il2mat)
:new_name       octave?   il2mat_wrap   old_name                 Parameters (1 = wrap w/ mat2il, 0 = pass raw)
                                                                1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
//
:imread                    n  1 raw_imread                      0
:blur                      n  1 raw_blur                        1  0  0  0  0
:arrowedline               n  1 raw_arrowedline                 1  0  0  0  0  0  0  0  0  0  0  0
:canny                     n  1 raw_canny                       1  0  0  0  0
:circle                    n  1 raw_circle                      1  0  0  0  0  0  0  0  0  0
:clipline                  n  0 raw_clipline                    0  0  0  0  0  0
:convexhull                n  0 raw_convexhull                  0  0  0
:cornerEigenValsAndVecs    n  1 raw_cornerEigenValsAndVecs      1  0  0  0
:cornerHarris              n  1 raw_cornerHarris                1  0  0  0  0
:cornerMinEigenVal         n  1 raw_cornerMinEigenVal           1  0  0  0
:dilate                    n  1 raw_dilate                      1  0  0  0  0
:ellipse2poly              n  0 raw_ellipse2poly                0  0  0  0  0  0  0  0
:erode                     n  1 raw_erode                       1  0  0  0  0
:fillconvexpoly            n  1 raw_fillconvexpoly              1  0  0  0  0  0  0  0
:filter2D                  n  1 raw_filter2D                    1  0  0  0  0  0
:findContours              n  0 raw_findContours                1  0  0  0  0
:gaussianblur              n  1 raw_gaussianblur                1  0  0  0  0
:getStructuringElement     n  0 raw_getStructuringElement       0  0  0  0  0
:getTextSize               n  0 raw_getTextSize                 0  0  0  0
:goodfeaturestotrack       n  0 raw_goodfeaturestotrack         1  0  0  0  0  0  0
:houghcircles              n  0 raw_houghcircles                1  0  0  0  0  0  0
:houghlines                n  0 raw_houghlines                  1  0  0  0  0  0
:im2double                 n  1 raw_im2double                   1
:imcontrast                n  1 raw_imcontrast                  1  0  0
:imcrop                    n  1 raw_imcrop                      1  0  0  0  0
:imresize                  n  1 raw_imresize                    1  0  0
:imsharpen                 n  1 raw_imsharpen                   1
:imwrite                   n  0 raw_imwrite                     1  0
:laplacian                 n  1 raw_laplacian                   1  0  0  0  0
:line                      n  1 raw_line                        1  0  0  0  0  0  0  0  0  0  0
:medianblur                n  1 raw_medianblur                  1  0
:puttext                   n  1 raw_puttext                     1  0  0  0  0  0  0  0  0  0  0  0
:scharr                    n  1 raw_scharr                      1  0  0  0  0  0
:sobel                     n  1 raw_sobel                       1  0  0  0  0  0  0
:threshold                 n  1 raw_threshold                   1  0  0  0
:undistort                 n  1 raw_undistort                   1  0  0  0
:boundingRect              n  0 raw_boundingRect                0
:ellipse                   n  1 raw_ellipse                     1  0  0  0  0  0  0  0  0  0  0  0  0  0
:montage                   n  1 raw_montage                     0  0  0
:morphologyEx              n  1 raw_morphologyEx                1  0  0  0  0  0  0
:pyrDown                   n  1 raw_pyrDown                     1  0  0  0
:pyrUp                     n  1 raw_pyrUp                       1  0  0  0
:rectangle                 n  1 raw_rectangle                   1  0  0  0  0  0  0  0  0  0  0
:sepFilter2D               n  1 raw_sepFilter2D                 1  0  0  0  0  0  0  0
:copymakeborder            n  1 raw_copymakeborder              1  0  0  0  0  0  0
:cvtColor                  n  1 raw_cvtColor                    1  0  0
:getgaussiankernel         n  0 raw_getgaussiankernel           0  0  0
:getrectsubpix             n  1 raw_getrectsubpix               1  0  0  0  0  0
:getrotationmatrix2D       n  0 raw_getrotationmatrix2D         0  0  0  0
:houghlinesp               n  0 raw_houghlinesp                 1  0  0  0  0  0
:newimshow                 n  0 imshow                          1
:newshow                   n  0 show                            1
