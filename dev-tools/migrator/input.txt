Input data for migrate.cpp

TODO:
-getTextSize and threshold (maybe more at time of reading) return 2 variables. Support returning multiple variables
	--Done, ~Anirudh (8/1/16)
-Generate builder_gateway_cpp.sce for us so we don't need to.
-For functions where il2mat or mat2il are not used at all, and no overloading is done, just bind the two functions instead of a wrapper.
	--Done ~Anirudh (8/1/16)
-montage may not be implemented correctly
-More helpful error messages than error(39)


USAGE
e.g.

:a 0 b 0 0 1 0

This means we make a function "a" that calls "b" when it has 4 arguments (0 0 1 0).
The third argument will first be transformed with mat2il before being passed. (Since it is represented by a 1)
The first, second and fourth arguments will be passed without any change. (Since they are represented by 0s)

We see there is a 0 before b. This means that the return value of b will be returned without modifications.
Otherwise, we would have run il2mat first. (This is done when b returns an image list)

For functions returning multiple values, we can do like this:

:a 1 0 b 0 0 1 0

This will make a wrapper function a exactly like the previous example, but 2 values are being returned by b.
The first return value is converted using il2mat before being returned by 1.
The second return value will be returned by a as it got it from b.


:a 1 0 b 0 0 1 0 will generate:

function [ res1, res2 ] = a(varargin)
	select length(varargin)
		case 4 then
			[ res1, res2 ] = b(varargin(1), varargin(2), mat2il(varargin(3)), varargin(4))
		else
			error(39)
	end
	res1 = il2mat(res1)
endfunction

FUNCTION OVERLOADING:

e.g.

:x 0 P 0 0 1 0
     Q 1 0

This creates a function "x" that calls "P" when it has 4 arguments (0 0 1 0) and "Q" if it has 2 arguments (1 0)
If P is called, then only the third argument is transformed using mat2il. The returned value is passed back as it is.
If Q is called, then only the first argument is transformed using mat2il first.

This result in:

function res = x(varargin)
	select length(varargin)
		case 4 then
			res = P(varargin(1), varargin(2), mat2il(varargin(3)), varargin(4))
		case 2 then
			res = Q(mat2il(varargin(1)), varargin(2))
		else
			error(39)
	end
endfunction

Actual data starts after the double slash

PLEASE USE SPACES, NOT TABS.

                     (1=return w/ il2mat)
:new_name            il2mat_wrap   old_name                    Parameters (1 = wrap w/ mat2il, 0 = pass raw)
                                                                1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
//
:imread                       1 raw_imread                      0
:blur                         1 raw_blur                        1  0  0  0  0
:arrowedline                  1 raw_arrowedline                 1  0  0  0  0  0  0  0  0  0  0  0
:canny                        1 raw_canny                       1  0  0  0  0
:circle                       1 raw_circle                      1  0  0  0  0  0  0  0  0  0
:clipline                     0 raw_clipline                    0  0  0  0  0  0
:convexhull                   0 raw_convexhull                  0  0  0
:cornerEigenValsAndVecs       1 raw_cornerEigenValsAndVecs      1  0  0  0
:cornerHarris                 1 raw_cornerHarris                1  0  0  0  0
:cornerMinEigenVal            1 raw_cornerMinEigenVal           1  0  0  0
:dilate                       1 raw_dilate                      1  0  0  0  0
:ellipse2poly                 0 raw_ellipse2poly                0  0  0  0  0  0  0  0
:erode                        1 raw_erode                       1  0  0  0  0
:fillconvexpoly               1 raw_fillconvexpoly              1  0  0  0  0  0  0  0
:filter2D                     1 raw_filter2D                    1  0  0  0  0  0
:findContours                 0 raw_findContours                1  0  0  0  0
:gaussianblur                 1 raw_gaussianblur                1  0  0  0  0
:getStructuringElement        0 raw_getStructuringElement       0  0  0  0  0
:getTextSize                  0 raw_getTextSize                 0  0  0  0
:goodfeaturestotrack          0 raw_goodfeaturestotrack         1  0  0  0  0  0  0
:houghcircles                 0 raw_houghcircles                1  0  0  0  0  0  0
:houghlines                   0 raw_houghlines                  1  0  0  0  0  0
:im2double                    1 raw_im2double                   1
:imcontrast                   1 raw_imcontrast                  1  0  0
:imcrop                       1 raw_imcrop                      1  0  0  0  0
:imresize                     1 raw_imresize                    1  0  0
:imsharpen                    1 raw_imsharpen                   1
:imwrite                      0 raw_imwrite                     1  0
:laplacian                    1 raw_laplacian                   1  0  0  0  0
:line                         1 raw_line                        1  0  0  0  0  0  0  0  0  0  0
:medianblur                   1 raw_medianblur                  1  0
:puttext                      1 raw_puttext                     1  0  0  0  0  0  0  0  0  0  0  0
:scharr                       1 raw_scharr                      1  0  0  0  0  0
:sobel                        1 raw_sobel                       1  0  0  0  0  0  0
:threshold                    1 raw_threshold                   1  0  0  0
:undistort                    1 raw_undistort                   1  0  0  0
:boundingRect                 0 raw_boundingRect                0
:ellipse                      1 raw_ellipse                     1  0  0  0  0  0  0  0  0  0  0  0  0  0
:montage                      1 raw_montage                     0  0  0
:morphologyEx                 1 raw_morphologyEx                1  0  0  0  0  0  0
:pyrDown                      1 raw_pyrDown                     1  0  0  0
:pyrUp                        1 raw_pyrUp                       1  0  0  0
:rectangle                    1 raw_rectangle                   1  0  0  0  0  0  0  0  0  0  0
:sepFilter2D                  1 raw_sepFilter2D                 1  0  0  0  0  0  0  0
:copymakeborder               1 raw_copymakeborder              1  0  0  0  0  0  0
:cvtColor                     1 raw_cvtColor                    1  0  0
:getgaussiankernel            0 raw_getgaussiankernel           0  0  0
:getrectsubpix                1 raw_getrectsubpix               1  0  0  0  0  0
:getrotationmatrix2D          0 raw_getrotationmatrix2D         0  0  0  0
:houghlinesp                  0 raw_houghlinesp                 1  0  0  0  0  0
:newimshow                    0 imshow                          1
:newshow                      0 show                            1
:imguidedfilter               1 raw_imguidedfilter              1  1  0  0
                              1 raw_imguidedfilter              1  1  0
                              1 raw_imguidedfilter              1  1
                              1 raw_imguidedfilter              1
:imgaussfilt3                 1 raw_imgaussfilt3                1  0
                              1 raw_imgaussfilt3                1
:multithresh                  0 raw_multithresh                 1
                              0 raw_multithresh                 1  0
:grayconnected                0 raw_grayconnected               0  0  0  0
                              0 raw_grayconnected               0  0  0
:integralImage                0 raw_integralImage               0  0
                              0 raw_integralImage               0
:regionfill                   0 raw_regionfill                  0  0
                              0 raw_regionfill                  0  0
:bwlookup                     1 raw_bwlookup                    1  0
:xyz2lab                      0 raw_xyz2lab                     0  0
:wiener2                      1 raw_wiener2                     1  0  0
:impyramid                    1 raw_impyramid                   1  0
:imwarp                       1 raw_imwarp                      1  0
:whitepoint                   0 raw_whitepoint                  0
:applycform                   1 raw_applycform                  1  0
:fftshift                     1 raw_fftshift                    1
:ifftshift                    1 raw_ifftshift                   1
